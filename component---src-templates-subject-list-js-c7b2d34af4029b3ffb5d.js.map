{"version":3,"sources":["webpack:///./src/templates/subject-list.js","webpack:///./src/components/SubjectCard.js"],"names":["LectureList","render","siteTitle","this","props","data","site","siteMetadata","title","posts","allMarkdownRemark","edges","classes","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","className","root","react_helmet__WEBPACK_IMPORTED_MODULE_6__","map","_ref","node","get","fields","slug","subject","_components_SubjectCard__WEBPACK_IMPORTED_MODULE_9__","key","onClick","navigate","withPrefix","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","variant","component","frontmatter","date","dangerouslySetInnerHTML","__html","excerpt","React","Component","withRoot","withStyles","theme","width","margin","padding","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_Card__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_Card__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_core_CardActions__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_CardActions__WEBPACK_IMPORTED_MODULE_4___default","_material_ui_core_CardContent__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core_CardContent__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_6___default","SubjectCard","children","pos","card","color","propTypes","PropTypes","object","isRequired","minWidth","marginBottom","fontSize"],"mappings":"iQAmBMA,4FACJC,kBAEE,IAAMC,EAAYC,KAAKC,MAAMC,KAAKC,KAAKC,aAAaC,MAC9CC,EAAQN,KAAKC,MAAMC,KAAKK,kBAAkBC,MACxCC,EAAYT,KAAKC,MAAjBQ,QAER,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQK,MACtBJ,EAAAC,EAAAC,cAACG,EAAA,OAAD,CAAQV,MAAON,IACdO,EAAMU,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACNb,EAAQc,cAAID,EAAM,sBAAwBA,EAAKE,OAAOC,KACtDC,EAAUH,cAAID,EAAM,uBAC1B,OACER,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACElB,MAAOiB,EACPE,IAAKN,EAAKE,OAAOC,KACjBI,QAAS,kBAAMC,mBAASC,qBAAWT,EAAKE,OAAOC,SAE/CX,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAYC,QAAQ,WAAWC,UAAU,MACtCzB,GAEHK,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAYE,UAAU,SAASZ,EAAKa,YAAYC,MAChDtB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CACEE,UAAU,IACVG,wBAAyB,CAAEC,OAAQhB,EAAKiB,mBAzB9BC,IAAMC,WAmCjBC,sBAASC,qBA3CT,SAAAC,GAAK,MAAK,CACvB1B,KAAM,CACJ2B,MAAO,MACPC,OAAQ,SACRC,QAAS,YAuCWJ,CAAmB1C,IAEpC,IAAM+C,EAAS,+CCxDtB,IAAAC,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,GAAAI,EAAAJ,EAAAE,EAAAC,GAAAE,EAAAL,EAAA,IAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAAE,EAAAI,GAAAE,EAAAR,EAAA,KAAAS,EAAAT,EAAAE,EAAAM,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAAE,EAAAQ,GAAAE,EAAAZ,EAAA,IAAAa,EAAAb,EAAAE,EAAAU,GAqBME,EAAc,SAAA3D,GAAS,IACnBQ,EAAsCR,EAAtCQ,QAASJ,EAA6BJ,EAA7BI,MAAOwD,EAAsB5D,EAAtB4D,SAAUpC,EAAYxB,EAAZwB,QAClC,OACEsB,EAAApC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQqD,IAAKrC,QAASA,GACpCsB,EAAApC,EAAAC,cAACyC,EAAA1C,EAAD,CAAME,UAAWJ,EAAQsD,MACvBhB,EAAApC,EAAAC,cAAC6C,EAAA9C,EAAD,KACEoC,EAAApC,EAAAC,cAAC+C,EAAAhD,EAAD,CAAYE,UAAWJ,EAAQJ,MAAO2D,MAAM,iBACzC3D,GAEFwD,GAEHd,EAAApC,EAAAC,cAAC2C,EAAA5C,EAAD,SAMRiD,EAAYK,UAAY,CACtBxD,QAASyD,IAAUC,OAAOC,YAGb7B,yBAlCA,CACbwB,KAAM,CACJM,SAAU,KAEZhE,MAAO,CACLiE,aAAc,GACdC,SAAU,IAEZT,IAAK,CACHQ,aAAc,KAyBH/B,CAAmBqB","file":"component---src-templates-subject-list-js-c7b2d34af4029b3ffb5d.js","sourcesContent":["import React from \"react\";\nimport withRoot from \"../withRoot\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport \"../prism-theme.css\";\nimport { Helmet } from \"react-helmet\";\nimport { get } from \"lodash\";\nimport { graphql, navigate } from \"gatsby\";\nimport SubjectCard from \"../components/SubjectCard\";\nimport { Typography } from \"@material-ui/core\";\nimport { withPrefix } from \"gatsby-link\";\n\nconst styles = theme => ({\n  root: {\n    width: \"80%\",\n    margin: \"0 auto\",\n    padding: \"25px 0\"\n  }\n});\n\nclass LectureList extends React.Component {\n  render() {\n    // const { subject } = this.props.pageContext;\n    const siteTitle = this.props.data.site.siteMetadata.title;\n    const posts = this.props.data.allMarkdownRemark.edges;\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Helmet title={siteTitle} />\n        {posts.map(({ node }) => {\n          const title = get(node, \"frontmatter.title\") || node.fields.slug;\n          const subject = get(node, \"frontmatter.subject\");\n          return (\n            <SubjectCard\n              title={subject}\n              key={node.fields.slug}\n              onClick={() => navigate(withPrefix(node.fields.slug))}\n            >\n              <Typography variant=\"headline\" component=\"h3\">\n                {title}\n              </Typography>\n              <Typography component=\"small\">{node.frontmatter.date}</Typography>\n              <Typography\n                component=\"p\"\n                dangerouslySetInnerHTML={{ __html: node.excerpt }}\n              />\n            </SubjectCard>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default withRoot(withStyles(styles)(LectureList));\n\nexport const pageQuery = graphql`\n  query SubjectByName($subject: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { subject: { eq: $subject } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n            subject\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = {\n  card: {\n    minWidth: 275\n  },\n  title: {\n    marginBottom: 16,\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n};\n\nconst SubjectCard = props => {\n  const { classes, title, children, onClick } = props;\n  return (\n    <div className={classes.pos} onClick={onClick}>\n      <Card className={classes.card}>\n        <CardContent>\n          <Typography className={classes.title} color=\"textSecondary\">\n            {title}\n          </Typography>\n          {children}\n        </CardContent>\n        <CardActions />\n      </Card>\n    </div>\n  );\n};\n\nSubjectCard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(SubjectCard);\n"],"sourceRoot":""}